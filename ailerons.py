# -*- coding: utf-8 -*-
"""ailerons.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pWaywGObsSG-huHmi9Ur9ltaFAXHTH2p
"""

import numpy as np
import pandas as pd
import seaborn as sns
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import mean_squared_error
from sklearn.metrics import r2_score
from sklearn.tree import DecisionTreeRegressor
from sklearn.ensemble import RandomForestRegressor
import matplotlib.pyplot as plt

df=pd.read_csv("/content/ailerons_train.csv", on_bad_lines='skip')

df

df.describe(include="all")

df.shape

df.dtypes

df.isnull().sum()

df.nunique()

df.var()

df.dropna(inplace=True)

correlation = df.corr() 
fig, ax = plt.subplots(figsize=(20,20)) 
ax = sns.heatmap(correlation ,annot = True)

plt.figure(figsize=(9, 8))
sns.distplot(df['goal'], color='b', bins=100, hist_kws={'alpha': 0.4})

X=df.loc[:,df.columns.drop("goal")].values
Y=df.loc[:,"goal"].values

#split dataset into train and test
X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size = 0.2, random_state = 0)

scaler = StandardScaler().fit(X_train)
X_train = scaler.transform(X_train)
X_test = scaler.transform(X_test)

"""## ***Linear Regression***"""

#Checking the model's accuracy
model = LinearRegression().fit(X_train, y_train)
model.score(X_train, y_train)

"""# ***Decision Tree Classifier***"""

tree = DecisionTreeRegressor()
tree.fit(X_train, y_train)
y_pred = tree.predict(X_test)
rmse = sqrt(mean_squared_error(y_test, y_pred))
print("RMSE value of Decision tree Regression is:",rmse)
r2 = r2_score(y_test, y_pred)
print(r2)

"""## ***Random Forest Classifier***"""

rf = RandomForestRegressor(n_estimators=5)
rf.fit(X_train, y_train)
y_pred = rf.predict(X_test)
rmse = sqrt(mean_squared_error(y_test, y_pred))
print("RMSE value of Random forest Regression is:",rmse)
r2 = r2_score(y_test, y_pred)
print(r2)

